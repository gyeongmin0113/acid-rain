// words_python.txt
def
class
import
from
as
if
elif
else
while
for
in
range
try:
except:
finally:
with
pass
break
continue
return
yield
global
nonlocal
lambda
del
assert
print()
input()
len()
str()
int()
float()
list()
dict()
set()
tuple()
sorted()
reversed()
enumerate()
zip()
map()
filter()
reduce()
sum()
min()
max()
any()
all()
isinstance()
hasattr()
getattr()
setattr()
open()
read()
write()
append()
extend()
insert()
remove()
pop()
clear()
copy()
deepcopy()
keys()
values()
items()
update()
get()
__init__
__str__
__len__
__dict__
super().__init__
@property
@classmethod
@staticmethod
if __name__ == '__main__':
raise Exception
try/except
with open() as f:
list comprehension
dict comprehension
f-strings
.format()
.split()
.join()
.strip()
.replace()
.startswith()
.endswith()
.upper()
.lower()
os.path.join
os.listdir()
sys.argv
json.dumps()
json.loads()
requests.get()
pandas.DataFrame
numpy.array
plt.plot()
asyncio.run()
async def
await
threading.Thread
multiprocessing.Process
queue.Queue()
pickle.dump()
re.match()
time.sleep()
datetime.now()
random.choice()
random.randint()
collections.defaultdict
collections.Counter
itertools.cycle
functools.partial
urllib.request
socket.socket()
subprocess.run()
logging.info()
argparse.ArgumentParser
unittest.TestCase